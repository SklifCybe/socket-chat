{"version":3,"sources":["components/Chat.tsx","components/ChatHeader.tsx","components/ChatInput.tsx","components/Message.tsx","components/Messager.tsx","components/Join.tsx","components/ToggleTheme.tsx","themes/index.tsx","App.tsx","index.tsx"],"names":["socket","ChatHeader","history","roomName","AppBar","position","sx","width","borderTopLeftRadius","borderTopRightRadius","Toolbar","Typography","variant","component","flexGrow","IconButton","onClick","push","mr","size","edge","color","aria-label","useStyles","makeStyles","theme","sendButton","borderLeft","borderRadius","palette","primary","dark","ChatInput","message","sendMessage","handleMessage","sendMessageEnter","sendMessageBtn","classes","Box","display","border","InputBase","mt","ml","flex","placeholder","value","onChange","onKeyPress","autoFocus","Button","className","alignItems","messageText","wordBreak","margin","padding","myMessageColor","backgroundColor","secondary","main","notMyMessageColor","light","notMyMessage","justifyContent","Message","name","isMyMessage","user","Grid","container","spacing","item","text","Messager","messages","messageRef","ref","flexDirection","height","borderWidth","overflowY","map","Chat","location","useHistory","useState","setName","roomID","setRoomID","setMessage","setMessages","useRef","ENDPOINT","process","useEffect","parse","search","room","io","emit","alert","off","disconnect","on","prev","current","scrollTo","Container","maxWidth","event","key","target","Join","marginTop","TextField","fullWidth","label","type","mb","ToggleTheme","setTheme","textAlign","paddingTop","darkTheme","createTheme","mode","lightTheme","App","ThemeProvider","CssBaseline","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6773b3d.chunk.js","sourcesContent":["import { FC, ReactElement, useState, useEffect, ChangeEvent, KeyboardEvent, useRef } from 'react';\r\nimport { parse } from 'query-string';\r\nimport { Location } from 'history';\r\nimport io, { Socket } from 'socket.io-client';\r\nimport { Container } from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { ChatHeader } from './ChatHeader';\r\nimport { ChatInput } from './ChatInput';\r\nimport { Messager } from './Messager';\r\n\r\nlet socket: Socket;\r\n\r\ntype ChatProps = {\r\n  location: Location;\r\n};\r\n\r\ntype parseLocation = {\r\n  name: string;\r\n  room: string;\r\n};\r\n\r\nexport type message = {\r\n  user: string;\r\n  text: string;\r\n};\r\n\r\nexport const Chat: FC<ChatProps> = ({ location }): ReactElement => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState('');\r\n  const [roomID, setRoomID] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<Array<message>>([]);\r\n  const messageRef = useRef<HTMLInputElement>(null);\r\n  const ENDPOINT = process.env.REACT_APP_BACKEND_URI || 'http://localhost:5050';\r\n\r\n  useEffect(() => {\r\n    const { name, room } = parse(location.search) as parseLocation;\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('ROOM:JOIN', { name, room }, () => {\r\n      alert(`This name=${name} is exist`);\r\n      history.push('/');\r\n      socket.off();\r\n    });\r\n\r\n    setName(name);\r\n    setRoomID(room);\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [location.search, ENDPOINT]);\r\n\r\n  useEffect(() => {\r\n    socket.on('ROOM:MESSAGE', (message: message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messageRef) {\r\n      messageRef?.current?.scrollTo(0, 99999);\r\n    }\r\n  }, [messages]);\r\n\r\n  const handleMessage = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessageEnter = (event: KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter' && message) {\r\n      socket.emit('ROOM:SEND_MESSAGE', message, () => setMessage(''));\r\n    }\r\n  };\r\n\r\n  const sendMessageBtn = () => {\r\n    if (message) {\r\n      socket.emit('ROOM:SEND_MESSAGE', message, () => setMessage(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: '0 !important',\r\n        borderRadius: '10px !important',\r\n      }}>\r\n      <ChatHeader history={history} roomName={roomID} />\r\n      <Messager messages={messages} name={name} messageRef={messageRef} />\r\n      <ChatInput\r\n        message={message}\r\n        sendMessage={{ sendMessageEnter, sendMessageBtn }}\r\n        handleMessage={handleMessage}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import { FC, ReactElement } from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@mui/material';\r\nimport { History } from 'history';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\ntype ChatHeaderProps = {\r\n  history: History;\r\n  roomName: string;\r\n};\r\n\r\nexport const ChatHeader: FC<ChatHeaderProps> = ({ history, roomName }): ReactElement => {\r\n  const onExitChat = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      sx={{\r\n        width: '100%',\r\n        borderTopLeftRadius: '10px !important',\r\n        borderTopRightRadius: '10px !important',\r\n      }}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          {roomName}\r\n        </Typography>\r\n        <IconButton\r\n          onClick={onExitChat}\r\n          sx={{ mr: '10px' }}\r\n          size=\"large\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\">\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { FC, ReactElement, KeyboardEvent, ChangeEvent } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { InputBase, Box, Button, Theme } from '@mui/material';\r\n\r\ntype ChatInputProps = {\r\n  message: string;\r\n  sendMessage: {\r\n    sendMessageEnter: (event: KeyboardEvent<HTMLInputElement>) => void;\r\n    sendMessageBtn: () => void;\r\n  };\r\n  handleMessage: (event: ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  sendButton: {\r\n    width: 'calc(100% - 75%)',\r\n    borderLeft: '1px solid black',\r\n    borderRadius: '0 0 10px 0',\r\n    color: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nexport const ChatInput: FC<ChatInputProps> = ({\r\n  message,\r\n  sendMessage,\r\n  handleMessage,\r\n}): ReactElement => {\r\n  const { sendMessageEnter, sendMessageBtn } = sendMessage;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      sx={{\r\n        display: 'flex',\r\n        width: '100%',\r\n        borderRadius: '0 0 10px 10px',\r\n        border: '1px solid black',\r\n      }}>\r\n      <InputBase\r\n        sx={{ mt: '20x', ml: '20px', flex: 1, color: '#000' }}\r\n        placeholder=\"Type a message...\"\r\n        value={message}\r\n        onChange={handleMessage}\r\n        onKeyPress={sendMessageEnter}\r\n        autoFocus\r\n      />\r\n      <Button onClick={sendMessageBtn} className={classes.sendButton} variant=\"text\">\r\n        Send\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n","import { Grid, Typography, Theme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { FC, ReactElement } from 'react';\r\n\r\nimport { message } from './Chat';\r\n\r\ntype MessageProps = {\r\n  message: message;\r\n  name: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    color: '#000',\r\n  },\r\n  messageText: {\r\n    wordBreak: 'break-word',\r\n    margin: '5px 10px',\r\n    padding: '6px',\r\n    borderRadius: '10px',\r\n  },\r\n  myMessageColor: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#fff',\r\n  },\r\n  notMyMessageColor: {\r\n    backgroundColor: theme.palette.secondary.light,\r\n    color: '#000',\r\n  },\r\n  notMyMessage: {\r\n    justifyContent: 'right',\r\n  },\r\n}));\r\n\r\nexport const Message: FC<MessageProps> = ({ message, name }): ReactElement => {\r\n  const classes = useStyles();\r\n  let isMyMessage = false;\r\n\r\n  if (message.user === name) {\r\n    isMyMessage = true;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isMyMessage ? (\r\n        <Grid container spacing={1}>\r\n          <Grid item className={classes.message}>\r\n            <Typography>{message.user}:</Typography>\r\n            <Typography className={`${classes.messageText} ${classes.myMessageColor}`}>\r\n              {message.text}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={1} className={classes.notMyMessage}>\r\n          <Grid item className={classes.message}>\r\n            <Typography>{message.user}:</Typography>\r\n            <Typography className={`${classes.messageText} ${classes.notMyMessageColor}`}>\r\n              {message.text}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { FC, ReactElement, MutableRefObject } from 'react';\r\nimport { Box } from '@mui/material';\r\n\r\nimport { Message } from './Message';\r\n\r\nimport { message } from './Chat';\r\n\r\ntype MessagerProps = {\r\n  messages: Array<message>;\r\n  name: string;\r\n  messageRef: MutableRefObject<null | HTMLInputElement>;\r\n};\r\n\r\nexport const Messager: FC<MessagerProps> = ({ messages, name, messageRef }): ReactElement => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      ref={messageRef}\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '20rem',\r\n        width: '100%',\r\n        border: 'solid #888',\r\n        borderWidth: '0 1px 0 1px',\r\n        padding: '1rem',\r\n        overflowY: 'auto',\r\n      }}>\r\n      {messages.map((message) => (\r\n        <Message message={message} name={name} />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, ReactElement, useState } from 'react';\r\nimport { Container, Typography, TextField, Button } from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Join: FC = (): ReactElement => {\r\n  const [name, setName] = useState('');\r\n  const [roomID, setRoomID] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handlename = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleRoomID = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setRoomID(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name && roomID) {\r\n      history.push(`/chat?name=${name}&room=${roomID}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        marginTop: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Join in Chat\r\n      </Typography>\r\n      <TextField margin=\"normal\" fullWidth label=\"User Name\" value={name} onChange={handlename} />\r\n      <TextField margin=\"normal\" fullWidth label=\"Room ID\" value={roomID} onChange={handleRoomID} />\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        sx={{ mt: 3, mb: 2 }}\r\n        onClick={handleSubmit}>\r\n        JOIN\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n","import { FC, ReactElement, SetStateAction } from 'react';\r\nimport { Container, IconButton } from '@mui/material';\r\nimport { Brightness3 as MoonIcon, Brightness7 as SunIcon } from '@mui/icons-material';\r\n\r\ntype ToggleThemeProps = {\r\n  theme: boolean;\r\n  setTheme: (theme: SetStateAction<boolean>) => void;\r\n};\r\n\r\nexport const ToggleTheme: FC<ToggleThemeProps> = ({ theme, setTheme }): ReactElement => {\r\n  const changeTheme = () => {\r\n    setTheme((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ textAlign: 'right', paddingTop: '10px' }}>\r\n      <IconButton onClick={changeTheme}>{theme ? <MoonIcon /> : <SunIcon />}</IconButton>\r\n    </Container>\r\n  );\r\n};\r\n","import { createTheme } from '@mui/material';\r\n\r\nconst secondary = {\r\n  main: '#2C6DFF',\r\n  light: '#F2F1F2',\r\n};\r\n\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    secondary,\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    secondary,\r\n    mode: 'light',\r\n  },\r\n});\r\n","import { FC, ReactElement, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\n\nimport { Chat } from './components/Chat';\nimport { Join } from './components/Join';\nimport { ToggleTheme } from './components/ToggleTheme';\n\nimport { lightTheme, darkTheme } from './themes';\n\nexport const App: FC = (): ReactElement => {\n  const [theme, setTheme] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <ToggleTheme theme={theme} setTheme={setTheme} />\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chat\" component={Chat} />\n    </ThemeProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}